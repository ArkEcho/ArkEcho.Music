@page "/Player"

@inject ArkEcho.Server.ArkEchoServer Server
@inject IJSRuntime JS
@inject AppModel Model
@inject ArkEcho.Player.ArkEchoJSPlayer JSPlayer

<p>MusicFileCount: @musicFileCounter</p>

<br />
<button class="btn btn-primary" @onclick="Count">Count</button>
<br />
<br />

<input type="text" id="searchMusic" name="searchMusic" @bind=@searchMusicValue>
<button class="btn btn-primary" @onclick="Search">Suche</button>

<br />
<button class="btn btn-primary" @onclick="Init">Init</button>
<button class="btn btn-primary" @onclick="Play">Play</button>
<button class="btn btn-primary" @onclick="Pause">Pause</button>

<br />
<br />
<label for="volumePlayer">Volume:</label>
<input type="number" id="volumePlayer" name="volumePlayer" onchange="onVolumePlayerChanged()" min="0" max="100" value="50">
<button hidden="true" id="AudioFinished" @onclick="Finished"></button>

@code { private int musicFileCounter = 0;
    private string searchMusicValue = string.Empty;
    protected override Task OnInitializedAsync()
    {
        JSPlayer.SetJSRuntime(JS);
        musicFileCounter = Server.GetAllMusicFiles().Count;
        return base.OnInitializedAsync();
    }

    private void Search()
    {
        Core.MusicFile file = Server.GetAllMusicFiles().Find(x =>
      x.Title.StartsWith(searchMusicValue, StringComparison.OrdinalIgnoreCase));

        JSPlayer.Init(file);
    }

    private void Init()
    {
        Core.MusicFile file = Server.GetAllMusicFiles().Find(x => x.Title.Equals("Du bist schön", StringComparison.OrdinalIgnoreCase));
        JSPlayer.Init(file);
    }

    private void Play()
    {
        JSPlayer.Play();
    }

    private void Pause()
    {
        JSPlayer.Pause();
    }

    private void Finished()
    {
        JSPlayer.AudioFinished();
    }

    private void Count()
    {
        Model.Counter++;
    } }
