@page "/"

@layout LoginLayout

@inject IAppModel model
@inject NavigationManager NavigationManager

<MudCard Width="100%" Outlined="true">
    <MudCardContent>
        <svg width="100%" height="200px" color="white">
            @((MarkupString)ArkEcho.Core.Properties.Resources.logo_svg)
        </svg>

        <MudTextField Label="Username" Variant="Variant.Outlined" @bind-Value="@username">Username</MudTextField>

        <MudTextField Label="Password" Variant="Variant.Outlined" @bind-Value="password" InputType="@PasswordInput"
                      Adornment="Adornment.End" AdornmentIcon="@PasswordInputIcon" OnAdornmentClick="passwordAdornmentClick" AdornmentAriaLabel="Show Password" />
    </MudCardContent>
    <MudCardActions>
        <MudButton Variant="Variant.Filled" OnClick="validateUser">Login</MudButton>

        @loginMesssage
    </MudCardActions>
</MudCard>


@code
{
    private string loginMesssage = string.Empty;

    private string username = string.Empty;
    private string password = string.Empty;
    
    bool isShow;
    InputType PasswordInput = InputType.Password;
    string PasswordInputIcon = Icons.Material.Filled.VisibilityOff;

    protected async override Task OnInitializedAsync()
    {
        if (await model.IsUserAuthenticated())
            NavigationManager.NavigateTo("/Player");
    }

    private async Task validateUser()
    {
        if (string.IsNullOrEmpty(username) || string.IsNullOrEmpty(password))
        {
            loginMesssage = "Empty username or password";
            return;
        }

        if(await model.AuthenticateUser(username, password))
            NavigationManager.NavigateTo("/Player");            
        else
            loginMesssage = "Username or password wrong";

        return;
    }

    void passwordAdornmentClick()
    {
        @if (isShow)
        {
            isShow = false;
            PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
            PasswordInput = InputType.Password;
        }
        else
        {
            isShow = true;
            PasswordInputIcon = Icons.Material.Filled.Visibility;
            PasswordInput = InputType.Text;
        }
    }
}