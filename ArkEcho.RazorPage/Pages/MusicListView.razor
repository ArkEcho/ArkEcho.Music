
@inherits MusicDisplayBase

@inject IAppModel model
@inject HTMLHelper helper

@*<h3>MusicListView @Display.DisplayName, @Sorting.DisplayName</h3>*@

<MudTable Class="d-flex flex-grow-1" Hover="true" Breakpoint="Breakpoint.Sm" Height="600px" FixedHeader="true"
            Items="@getFilteredMusicFileList()" Virtualize="true" GroupBy="@groupDefinition"
            GroupHeaderStyle="background-color:var(--mud-palette-background-grey)"
            GroupFooterClass="mb-4" Dense="true" MultiSelection="false">

    <HeaderContent>
        <MudTh>Album</MudTh>
        <MudTh>#</MudTh>
        <MudTh>Titel</MudTh>
        <MudTh>Performer</MudTh>
        <MudTh>Dauer</MudTh>
    </HeaderContent>

    <ColGroup>
        <col /><col /> <col /> <col /> <col />
    </ColGroup>

    <GroupHeaderTemplate>
        <MudTh Class="mud-table-cell-custom-group" colspan="5">
            <MudText Typo="Typo.caption">@getTableGroupName(context)</MudText>
        </MudTh>
        @*<MudTh Class="mud-table-cell-custom-group" colspan="2">            
            <MudStack Class="ml-1 mt-1 pointer-events-none" Spacing="0">
                <MudText Typo="Typo.body2">@(((Album)context.Key).Name)</MudText>
            </MudStack>
        </MudTh>
        <MudTh Class="mud-table-cell-custom-group" colspan="1">
            <MudText Typo="Typo.body2">@(context.Items.Sum((e) => e.Duration).ConvertTimeMilliseconds())</MudText>
        </MudTh>*@
    </GroupHeaderTemplate>

    <RowTemplate>
        <MudTd DataLabel="Album">
            @if (model.Library.GetAlbum(context.Album).MusicFiles.IndexOf(context.GUID) == 0)
            {
                <MudImage Class="rounded-lg" Src="@(helper.GetBase64PngImg(model.Library.GetAlbum(context.Album).Cover64))" Width="80" Height="80" ObjectFit="ObjectFit.Fill" />                
            }
        </MudTd>
        <MudTd DataLabel="Track">@context.Track</MudTd>
        <MudTd DataLabel="Sign">@context.Title</MudTd>
        <MudTd DataLabel="Performer">@context.Performer</MudTd>
        <MudTd DataLabel="Duration">@context.Duration.ConvertTimeMilliseconds()</MudTd>
    </RowTemplate>

    @*<GroupFooterTemplate>
        <MudTh Class="mud-table-cell-custom-group mud-table-cell-custom-group-footer" colspan="5">Total Mass: @context.Items.Sum((e) => e.Duration)</MudTh>
    </GroupFooterTemplate>*@
</MudTable>

@code {
    private TableGroupDefinition<MusicFile> groupDefinition = null;

    protected string getTableGroupName(TableGroupData<object, MusicFile> context)
    {
        switch (Display.Mode)
        {
            case DisplayMode.DisplayModes.Album:
                return ((Album)context.Key).Name;
            case DisplayMode.DisplayModes.AlbumInterpret:
                return ((AlbumArtist)context.Key).Name;
            default:
                return "TABLEGROUPNAME";
        }
    }

    protected override Task OnInitializedAsync()
    {
        groupDefinition = new TableGroupDefinition<MusicFile>()
        {
            GroupName = string.Empty,
            Indentation = false,
            Expandable = false,
            Selector = (e) =>
            {
                switch (Display.Mode)
                {
                    case DisplayMode.DisplayModes.Album:
                        return model.Library.GetAlbum(e.Album);
                    case DisplayMode.DisplayModes.AlbumInterpret:
                    default:
                        return model.Library.GetAlbumArtist(e.AlbumArtist);
                }
            }
        };

        return base.OnInitializedAsync();
    }
}
