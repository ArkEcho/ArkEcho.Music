@inject IAppModel model

@code {
    [Parameter]
    public DisplayMode Display { get; set; }

    [Parameter]
    public SortingMode Sorting { get; set; }

    [Parameter]
    public string SearchContent { get; set; }   

    protected void startMusicAlbum(Album album)
    {        
        List<MusicFile> files = new List<MusicFile>();

        files = model.Library.GetMusicFiles(album);

        if (files.Count == 0)
            return; // TODO: Give Error

        model.Player.Start(files, 0);
    }

    protected string getAlbumArtistNameTruncated(Album album)
    {
        return model.Library.GetAlbumArtist(album.AlbumArtist).Name.Truncate(20);
    }

    protected List<Album> getFilteredAlbum()
    {
        if (string.IsNullOrEmpty(SearchContent))
            return model.Library.Album;

        List<string> searchTerms = SearchContent.Split(" ").ToList();
        return model.Library.Album.FindAll(x => searchTerms.All(s => x.Name.Contains(s, StringComparison.OrdinalIgnoreCase))
                                                    || searchTerms.All(s => model.Library.GetAlbumArtist(x.AlbumArtist).Name.Contains(s, StringComparison.OrdinalIgnoreCase)));
    }
}
