
@inherits MusicDisplayBase

@inject IAppModel model
@inject HTMLHelper helper

<MudTable Class="d-flex flex-grow-1" Hover="true" Breakpoint="Breakpoint.Sm" Height="600px" FixedHeader="true"
            Items="@getFilteredAlbum()" Virtualize="true" GroupBy="@groupDefinition"
            GroupHeaderStyle="background-color:var(--mud-palette-background-grey)"
            GroupFooterClass="mb-4" Dense="true" MultiSelection="false">

    <HeaderContent>
        @*<MudTh>Album</MudTh>
        <MudTh>#</MudTh>
        <MudTh>Titel</MudTh>
        <MudTh>Performer</MudTh>
        <MudTh>Dauer</MudTh>*@
    </HeaderContent>

    <ColGroup>
        <col span="1" style="width: 15%;" />
        <col span="1" style="width: 85%;" />
    </ColGroup>

    <GroupHeaderTemplate>
        <MudTh Class="mud-table-cell-custom-group" colspan="2">
            <MudText Typo="Typo.caption">@getTableGroupName(context)</MudText>
        </MudTh>
    </GroupHeaderTemplate>

    <RowTemplate>
    @{
        AlbumArtist artist = model.Library.GetAlbumArtist(context.AlbumArtist);

        <MudTd DataLabel="Album">            
            <MudStack Class="ml-1 mt-1 pointer-events-none" Spacing="0">
                <MudImage Class="rounded-lg" Src="@(helper.GetBase64PngImg(context.Cover64))" Width="80" Height="80" ObjectFit="ObjectFit.Fill" />  
                <MudText Typo="Typo.body2">@(context.Name )</MudText>
                <MudText Typo="Typo.body2">@(artist.Name )</MudText>
                @*<MudText Typo="Typo.body2">@(context.Items.Sum((e) => e.Duration).ConvertTimeMilliseconds())</MudText>*@
            </MudStack>                
        </MudTd>

        <MudTd DataLabel="Titel">
            <MudSimpleTable Dense="true" Hover="true" Bordered="false" Striped="false" Style="overflow-x: auto;">
                <thead>                    
                </thead>
                <colgroup>
                    <col span="1" style="width: 10%;">
                    <col span="1" style="width: 40%;">
                    <col span="1" style="width: 40%;">
                    <col span="1" style="width: 10%;">
                </colgroup>
                <tbody>                
                    @foreach (MusicFile file in model.Library.GetMusicFiles(context))
                    {
                        <tr>
                            <td>@file.Track</td>
                            <td>@file.Title</td>
                            <td>@file.Performer</td>
                            <td>@file.Duration.ConvertTimeMilliseconds()</td>
                        </tr>
                    }
                </tbody>
            </MudSimpleTable>
        </MudTd>
    }
    </RowTemplate>

    @*<GroupFooterTemplate>
        <MudTh Class="mud-table-cell-custom-group mud-table-cell-custom-group-footer" colspan="5">Total Mass: @context.Items.Sum((e) => e.Duration)</MudTh>
    </GroupFooterTemplate>*@
</MudTable>

@code {
    private TableGroupDefinition<Album> groupDefinition = null;

    protected string getTableGroupName(TableGroupData<object, Album> context)
    {
        switch (Display.Mode)
        {
            case DisplayMode.DisplayModes.Album:
                return ((Album)context.Key).Name;
            case DisplayMode.DisplayModes.AlbumInterpret:
                return ((AlbumArtist)context.Key).Name;
            default:
                return "TABLEGROUPNAME";
        }
    }

    protected override Task OnInitializedAsync()
    {
        groupDefinition = new TableGroupDefinition<Album>()
        {
            GroupName = string.Empty,
            Indentation = false,
            Expandable = false,
            Selector = (e) =>
            {
                switch (Display.Mode)
                {
                    case DisplayMode.DisplayModes.Album:
                        return e;
                    case DisplayMode.DisplayModes.AlbumInterpret:
                    default:
                        return model.Library.GetAlbumArtist(e.AlbumArtist);
                }
            }
        };

        return base.OnInitializedAsync();
    }
}
